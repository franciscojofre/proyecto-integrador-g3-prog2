    procesarLogin : (req, res) => {
        let info = req.body;
        let filtro = {where : [{email: info.email}]};
        let errors = {};
        

        if (info.email == "") {
            errors.message = "El email esta vacio";
            res.locals.errors = errors;
            return res.render('login');
            
        }else if(info.password == ""){
            errors.message = "El password esta vacio";
            res.locals.errors = errors;
            return res.render('login'); 
        } else {
             /* debe ir en el else */
        userModel.findOne(filtro)
        .then((result) => {
            if (result != null) {


                let passEncriptada = bcrypt.compareSync(info.password, result.contrasenia)
                if (passEncriptada) {
                    

                    /* Poniendo en session al usuario */
                    console.log(result.dataValues)
                    req.session.user = result.dataValues;
                   
                    if (req.body.remember != undefined) {
                        res.cookie('userId', result.dataValues.id, {maxAge : 1000 * 60 *10 } )
                    }

                    return res.redirect("/")
                } else {
                    errors.message = "El mail existe pero la password es incorrecta";
                    res.locals.errors = errors;
                    return res.render('login');
                }
               
            } else {
                errors.message = "El mail no existe";
                res.locals.errors = errors;
                return res.render('login');
            }
        }).catch((err) => {
            console.log(err)
        });
        }
    }



//Esto en el appjs
  /* creando el middleware de cookies .*/
  app.use(function(req, res, next) {
    if (req.cookies.userId != undefined && req.session.user == undefined) {
        let idUsuario = req.cookies.userId;
  
        db.User.findByPk(idUsuario)
        .then((user) => {
          req.session.user = user.dataValues;
          res.locals.user = user.dataValues;
          return next();
        }).catch((err) => {
          console.log(err);
        });
    } else {
      return next();
    }
    
  });